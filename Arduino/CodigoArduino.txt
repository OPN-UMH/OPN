#include <SPI.h>
#include <Ethernet.h>
#include <Servo.h>


// Introduce la dirección MAC y la dirección IP:

byte mac[] = { 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF }; //Hay que buscarla en el modem.
//IPAddress ip(192,168,1,25); //Tenemos que adjudicarle una en la red lan.
//La IP de la shield:
byte ip[]={192,168,1,25 };
//La dirección del gateway del router;
//byte gateway[]= {192,168,1,1};
//La subnet:
//byte subnet[]= {255,255,255,0};

byte server []= { 192,168,1,80};
//79,108,144,158};  // dirección IP del servidor
int delayTime1 = 15;

Servo miservo;
int pos=0;
int angulo=90; //Hay que cambiarlo por el angulo que necesitemos en nuestra aplicación
char c;
char aux=0;

EthernetClient client;

//const int requestInterval = 30000;  // retraso entre conexiones
//
//char serverName[] = "api.twitter.com";  // twitter URL
//
//boolean requested;                   // si has hecho una petición
//long lastAttemptTime = 0;            // última vez que conectaste con twitter
//
//String currentLine = "";            // string para guardar el texto del servidor
//String tweet = "";                  // string para guardar el tweet
//boolean readingTweet = false;       // si estas leyendo el tweet


void setup()
{
  //Se configura el pin que va al servo como salida
  //pinMode(9,OUTPUT);
  miservo.attach(9);// liga el servo conectado en el pin 9 al objeto servo
//  currentLine.reserve(256);
//  tweet.reserve(150);
  
}

void loop(){
  connectToPC();

  
  while (client.available()) {
    delay (1000);
    c = client.read();
    Serial.println(c);
     if(c==aux);
     else{
         if(c=='a'){
            moveForward();
         }
         else if(c=='c'){
            moveBackward();
         }
    }
}
  

  if (!client.connected()) {
    Serial.println();
    Serial.println("Disconnecting");
    client.stop();
    delay(6000);
  }
  //delay(3000);
       aux=c;
}


void connectToPC(){
  Serial.begin(9600);
  Ethernet.begin(mac, ip);
  
  delay(1000);

  Serial.println("Connecting...");

  if (client.connect(server, 5000)) {
    Serial.println("Connected");
    client.println("GET /search?q=arduino HTTP/1.0"); //NECESARIO PARA ESTABLECER LA CONEXIÓN
    //client.println();  //NO ES NECESARIO

  } 
  else {
    Serial.println("Connection failed");
  }
}
  
void moveForward() {
  for(pos=0;pos<angulo;pos+=1){ 
        miservo.write(pos);      
        delay(delayTime1);
  }
}

void moveBackward() {
  for(pos=angulo;pos>=1;pos-=1){
        miservo.write(pos);
        delay(delayTime1);    
  }
}
